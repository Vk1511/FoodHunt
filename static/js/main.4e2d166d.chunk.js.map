{"version":3,"sources":["assets/logo.png","Components/Navbar/Navbar.jsx","assets/search.svg","Components/Cards/Cards.jsx","assets/close.svg","Components/RecipeModal/RecipeModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","handleSearch","className","src","logo","alt","type","placeholder","onChange","event","Cards","apiData","handleIngredients","length","search","style","fontSize","fontWeight","map","dish","key","recipe","image","label","Math","trunc","totalNutrients","ENERC_KCAL","quantity","PROCNT","FAT","CHOCDF","onClick","ingredientLines","url","RecipeModal","modal","dishName","setModal","handleRecipeLink","dishURL","Modal","setAppElement","isOpen","close","ingredientLine","window","open","App","useState","searchTimer","setSearchTimer","setApiData","setDishName","setDishURL","setIngredientLines","clearTimeout","timeout","setTimeout","axios","get","target","value","then","response","data","hits","name","iteam","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e2d166d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce6df1b.png\";","import React from \"react\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar({ handleSearch }) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"nav_icon\">\r\n        <img src={logo} alt=\"logo\" className=\"logo\" />\r\n        <span className=\"site_title\">FoodHunt</span>\r\n      </div>\r\n\r\n      <div className=\"nav_search_box\">\r\n        <input\r\n          type=\"search\"\r\n          className=\"search_bbox\"\r\n          placeholder=\"Serch Recipe i.e Paneer Masala\"\r\n          onChange={(event) => handleSearch(event)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/search.16f37be5.svg\";","import React from \"react\";\r\nimport search from \"../../assets/search.svg\";\r\nimport \"./Cards.css\";\r\n\r\nfunction Cards({ apiData, handleIngredients }) {\r\n  //console.log(apiData);\r\n\r\n  return (\r\n    <div className=\"main_conatiner\">\r\n      {apiData.length === 0 ? (\r\n        <div className=\"nodata\">\r\n          <img src={search} alt=\"logo\" className=\"nodata_img\" />\r\n          <p style={{ fontSize: \"2rem\", fontWeight: \"700\" }}>Search Recipe</p>\r\n        </div>\r\n      ) : (\r\n        apiData.map((dish, key) => {\r\n          return (\r\n            <div className=\"card_con\" key={key}>\r\n              <div className=\"card_image\">\r\n                <img src={dish.recipe.image} alt=\"img\" className=\"card_img\" />\r\n              </div>\r\n              <span className=\"iteam_title\">{dish.recipe.label}</span>\r\n              <span className=\"nutrients_con\">\r\n                <span className=\"nutrients\">Nutrients</span>\r\n                <span className=\"nutrients_det\">\r\n                  <span>Energy</span>\r\n                  <span>Protein</span>\r\n                  <span>Fat</span>\r\n                  <span>Carbs</span>\r\n                </span>\r\n                <span className=\"nutrients_det_ans\">\r\n                  <span>\r\n                    {Math.trunc(dish.recipe.totalNutrients.ENERC_KCAL.quantity)}{\" \"}\r\n                    kcal\r\n                  </span>\r\n                  <span>\r\n                    {Math.trunc(dish.recipe.totalNutrients.PROCNT.quantity)} g\r\n                  </span>\r\n                  <span>\r\n                    {Math.trunc(dish.recipe.totalNutrients.FAT.quantity)} g\r\n                  </span>\r\n                  <span>\r\n                    {Math.trunc(dish.recipe.totalNutrients.CHOCDF.quantity)} g\r\n                  </span>\r\n                </span>\r\n              </span>\r\n              <span\r\n                className=\"ingredients\"\r\n                onClick={() =>\r\n                  handleIngredients(\r\n                    dish.recipe.label,\r\n                    dish.recipe.ingredientLines,\r\n                    dish.recipe.url\r\n                  )\r\n                }\r\n              >\r\n                Ingredients\r\n              </span>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/close.eedac43a.svg\";","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport close from \"../../assets/close.svg\";\r\nimport \"./RecipeModal.css\";\r\n\r\nfunction RecipeModal({\r\n  modal,\r\n  dishName,\r\n  ingredientLines,\r\n  setModal,\r\n  handleRecipeLink,\r\n  dishURL,\r\n}) {\r\n  Modal.setAppElement(\"#root\");\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} className=\"modal_con\">\r\n        <div className=\"modal_head\">\r\n          <div className=\"title\">{dishName}</div>\r\n          <button className=\"cls_btn\" onClick={() => setModal(!modal)}>\r\n            <img src={close} alt=\"close\" className=\"cls_btn_img\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal_content\">\r\n          <div className=\"content_head\">\r\n            Ingredients\r\n            <hr />\r\n          </div>\r\n          <div className=\"content_data\">\r\n            {ingredientLines.map((ingredientLine, key) => {\r\n              return (\r\n                <ul key={key}>\r\n                  <li className=\"dishingredient\">{ingredientLine}</li>\r\n                </ul>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer\">\r\n          <span\r\n            className=\"play_video\"\r\n            onClick={() => window.open(dishURL, \"_blank\")}\r\n          >\r\n            Read Article\r\n          </span>\r\n          <span\r\n            className=\"play_video\"\r\n            onClick={() => handleRecipeLink(dishName)}\r\n          >\r\n            Play Video\r\n          </span>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeModal;\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Cards from \"./Components/Cards/Cards\";\nimport \"./App.css\";\nimport RecipeModal from \"./Components/RecipeModal/RecipeModal\";\n\nfunction App() {\n  const [searchTimer, setSearchTimer] = useState(\"\");\n  const [apiData, setApiData] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [dishName, setDishName] = useState();\n  const [dishURL, setDishURL] = useState();\n  const [ingredientLines, setIngredientLines] = useState();\n  const URL = \"https://www.youtube.com/results?search_query=how+to+make+\";\n\n  //debouncing concept\n  const handleSearch = (event) => {\n    clearTimeout(searchTimer);\n    const timeout = setTimeout(() => {\n      axios\n        .get(\n          `https://api.edamam.com/search?q=${event.target.value}&app_id=4c2a518f&app_key=578f6fcfcbe465acc02994ef02bcbb40`\n        )\n        .then((response) => {\n          setApiData(response.data.hits);\n        });\n    }, 150);\n    setSearchTimer(timeout);\n  };\n\n  const handleRecipeLink = (name) => {\n    const iteam = name.replace(/\\s/g, \"+\");\n    window.open(URL + iteam, \"_blank\");\n  };\n\n  const handleIngredients = (name, ingredientLines, url) => {\n    setModal(!modal);\n    setDishName(name);\n    setIngredientLines(ingredientLines);\n    setDishURL(url);\n  };\n\n  return (\n    <>\n      <Navbar handleSearch={handleSearch} />\n      <Cards apiData={apiData} handleIngredients={handleIngredients} />\n      {modal === true ? (\n        <RecipeModal\n          modal={modal}\n          dishName={dishName}\n          ingredientLines={ingredientLines}\n          setModal={setModal}\n          handleRecipeLink={handleRecipeLink}\n          dishURL={dishURL}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}